#include<bits/stdc++.h>
#define ll long long
using namespace std;
struct road {
	int to,co;
};
vector<road>A[20005];
struct node {
	ll di;
	int v;
	bool operator<(const node &_)const {
		return di>_.di;
	}
};
int n,m,k,p,f[(1<<20)+1];
ll dp[(1<<20)+1][25],dis[25][25],dt[25],d[20005];
bool vis[20005];
priority_queue<node>Q;
void check(ll &x,ll y) {
	if(x>y)x=y;
}
void djstl(int s) {
	memset(vis,0,sizeof(vis));
	d[s]=0;
	Q.push((node) {
		0,s
	});
	while(!Q.empty()) {
		int x=Q.top().v;
		Q.pop();
		if(vis[x])continue;
		vis[x]=1;
		for(int i=0; i<A[x].size(); i++) {
			int y=A[x][i].to,z=A[x][i].co;
			if(d[y]>d[x]+z) {
				d[y]=d[x]+z;
				node nxt;
				nxt.di=d[y],nxt.v=y;
				Q.push(nxt);
			}
		}
	}
}
int main() {
	scanf("%d%d%d",&n,&m,&k);
	for(int i=1; i<=m; i++) {
		int a,b,c;
		scanf("%d%d%d",&a,&b,&c);
		A[a].push_back((road) {
			b,c
		});
		A[b].push_back((road) {
			a,c
		});
	}
	scanf("%d",&p);
	for(int i=1; i<=p; i++) {
		int a,b;
		scanf("%d%d",&a,&b);
		f[a]|=(1<<(b-2));
	}
	for(int i=1; i<=k+1; i++) {
		for(int j=1; j<=n; j++)d[j]=1e18+7;
		djstl(i);
		for(int j=1; j<=k+1; j++)dis[i][j]=d[j];
		dt[i]=d[n];
	}
	/*for(int i=1; i<=k+1; i++) {
		for(int j=1; j<=k+1; j++)printf("%d ",dis[i][j]);
		printf("\n");
	}*/
	for(int i=0; i<(1<<k); i++)
		for(int j=2; j<=k+1; j++)dp[i][j]=1e18+7;
	for(int i=2; i<=k+1; i++)dp[1<<(i-2)][i]=dis[1][i];
	for(int i=0; i<(1<<k); i++)
		for(int j=2; j<=k+1; j++)
			for(int q=2; q<=k+1; q++) {
				if((i&(1<<(j-2)))==0||(i&(1<<(q-2)))!=0)continue;
				if((f[q]&i)!=0)continue;
				check(dp[i|(1<<(q-2))][q],dp[i][j]+dis[j][q]);
			}
	int ml=((1<<k)-1);
	ll ans=2e18;
	for(int i=2; i<=k+1; i++)check(ans,dp[ml][i]+dt[i]);
	if(k<1)printf("%lld",dt[1]);
	else printf("%lld",ans);
	return 0;
}